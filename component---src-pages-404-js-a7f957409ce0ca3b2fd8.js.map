{"version":3,"file":"component---src-pages-404-js-a7f957409ce0ca3b2fd8.js","mappings":"iJAoDA,IA1CY,IAAuC,IAAD,UAArC,YAAEA,EAAW,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBL,MAExC,OACE,gCACE,6BAASA,EAASM,EAAkBN,EAAK,MAAMM,EAAiBN,EAAS,iBACzE,wBAAMO,KAAK,cAAcC,QAAUJ,GAAoC,yCACvE,wBAAMK,SAAS,WAAWD,QAASR,IACnC,wBAAMS,SAAS,iBAAiBD,QAAUJ,GAAoC,yCAC9E,wBAAMK,SAAS,WAAWD,QAAQ,wBAClC,wBAAMC,SAAS,gBAAgBD,QAAQ,cACvC,wBAAMC,SAAS,iBAAiBD,QAAQ,QACxC,wBAAMC,SAAS,kBAAkBD,QAAQ,QACzC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASJ,IACzCH,EACA,C,kGC1CP,MAWaW,EAAO,IAAM,gBAAC,IAAG,CAACZ,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAEa,EAAI,SAAEC,GAAU,EACtC,MAAMC,EAAYF,EAAKX,KAAKG,aAAaL,MAEzC,OACE,gBAAC,IAAM,CAACc,SAAUA,EAAUd,MAAOe,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://coffee-cogs-docs/./src/components/seo.js","webpack://coffee-cogs-docs/./src/pages/404.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{ title ? (defaultTitle ? `${title} | ${defaultTitle}` : title) : \"Coffee Cogs ☕\" }</title>\n      <meta name=\"description\" content={ metaDescription ? metaDescription : \"Documentation site for Coffee Cogs ☕\" } />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={ metaDescription ? metaDescription : \"Documentation site for Coffee Cogs ☕\" } />\n      <meta property=\"og:image\" content=\"/coffee-cogs-rd.png\" />\n      <meta property=\"og:image:type\" content=\"image/png\" />\n      <meta property=\"og:image:width\" content=\"200\" />\n      <meta property=\"og:image:height\" content=\"200\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../layouts\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","data","location","siteTitle"],"sourceRoot":""}